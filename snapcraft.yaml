name: yamagi-quake2-beidl
version: 8.30.0
grade: stable
summary: An enhanced version of id Software's Quake II.
description: |
  Note:
  This package only provides the engine, you need a valid copy of the (proprietary) game data to launch the game.
  
  This is the Yamagi Quake II Client, an enhanced version of id Software's Quake II with focus on offline and coop gameplay. Both the gameplay and the graphics are unchanged, but many bugs if the last official release were fixed and some nice to have features like widescreen support and a modern OpenGL 3.2 renderer were added. Unlike most other Quake II source ports Yamagi Quake II is fully 64 bit clean. It works perfectly on modern processors and operating systems. Yamagi Quake II runs on nearly all common platforms; including FreeBSD, Linux, OpenBSD, Windows and OS X.
  
  This code is build upon Icculus Quake II, which itself is based on Quake II 3.21. Yamagi Quake II is released under the terms of the GPL version 2.
  
  Note to snap packagers:
   Additionally, other snaps can consume its content via a content interface plug. Consuming snaps could use following snapcraft.yaml snippet to add the interface.
  
  plugs:
    quake2-engine:
      content: quake2-engine
      interface: content
      target: $SNAP/quake2-engine
      default-provider: yamagi-quake2-beidl:quake2-engine
   
  Within the consuming snap the content would be exposed at "$SNAP/quake2-engine", ie:
    /snap/the-consuming-snap/current/quake2-engine
    /var/lib/snapd/snap/the-consuming-snap/current/quake2-engine
   
  Under certain circumstances it could be necessary to manually connect the interface, ie:
    snap connect the-consuming-snap:quake2-engine yamagi-quake2-beidl:quake2-engine
  
confinement: strict
base: core22
architectures:
  - build-on: amd64
  - build-on: armhf
  - build-on: arm64

apps:
  yquake2:
    environment:
      LD_LIBRARY_PATH: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/pulseaudio:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET
      XKB_CONFIG_ROOT: $SNAP/usr/share/X11/xkb
    command-chain:
    - bin/wayland-launch
    - bin/graphics-core22-wrapper
    command: bin/quake2
    plugs: [ wayland, x11, desktop, home, opengl, pulseaudio, removable-media, network, joystick ]
  yquake2-gles3:
    environment:
      QUAKE2_LAUNCHFLAGS: +set vid_renderer gles3
      LD_LIBRARY_PATH: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/pulseaudio:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET
      XKB_CONFIG_ROOT: $SNAP/usr/share/X11/xkb
    command-chain:
    - bin/wayland-launch
    - bin/graphics-core22-wrapper
    command: bin/quake2
    plugs: [ wayland, x11, desktop, home, opengl, pulseaudio, removable-media, network, joystick ]
  yquake2-launch:
    environment:
      LD_LIBRARY_PATH: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/pulseaudio:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET
      XKB_CONFIG_ROOT: $SNAP/usr/share/X11/xkb
    command-chain:
    - bin/wayland-launch
    - bin/graphics-core22-wrapper
    command: bin/yquake2-launch
    plugs: [ wayland, x11, desktop, home, opengl, pulseaudio, removable-media, network, joystick ]
  yquake2-gles3-launch:
    environment:
      QUAKE2_LAUNCHFLAGS: +set vid_renderer gles3
      LD_LIBRARY_PATH: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/pulseaudio:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET
      XKB_CONFIG_ROOT: $SNAP/usr/share/X11/xkb
    command-chain:
    - bin/wayland-launch
    - bin/graphics-core22-wrapper
    command: bin/yquake2-launch
    plugs: [ wayland, x11, desktop, home, opengl, pulseaudio, removable-media, network, joystick ]

slots:
  quake2-engine:
    content: quake2-engine
    interface: content
    read:
      - $SNAP

plugs:
  graphics-core22:
    interface: content
    target: $SNAP/graphics
    default-provider: mesa-core22

layout:
  /usr/share/libdrm:
    bind: $SNAP/graphics/libdrm
  /usr/share/drirc.d:
    symlink: $SNAP/graphics/drirc.d
  /usr/share/X11/XErrorDB:
    symlink: $SNAP/graphics/X11/XErrorDB
  /usr/share/X11/locale:
    symlink: $SNAP/graphics/X11/locale
  /usr/share/X11/xkb:
    symlink: $SNAP/graphics/X11/xkb

parts:
  quake2:
    source: https://github.com/yquake2/yquake2.git
    source-type: git
    source-tag: QUAKE2_8_30
    plugin: cmake
    override-build: |
      mkdir build && cd build
      cmake $SNAPCRAFT_PART_SRC -DCMAKE_INSTALL_PREFIX=
      make -j4
      mkdir -p $SNAPCRAFT_PART_INSTALL/bin
      mv release/* $SNAPCRAFT_PART_INSTALL/bin/
    build-packages:
      - make
      - build-essential
      - libcurl4-gnutls-dev
      - libgl1-mesa-dev
      - libsdl2-dev
      - libsdl2-image-dev
      - libsdl2-mixer-dev
      - libsdl2-net-dev
      - libpulse-dev
      - libvulkan-dev
      - libwayland-dev
      - libvorbis-dev
      - libmad0-dev
      - libogg-dev
      - libopenal-dev
      - zlib1g-dev
    stage-packages:
      - libsdl2-2.0-0
      - libsdl2-image-2.0-0
      - libsdl2-mixer-2.0-0
      - libsdl2-net-2.0-0
      - libpulse0
      - libvorbis0a
      - libmad0
      - libwayland-client0
      - libogg0
      - libopenal1
      - zlib1g
      - zenity
    prime:
      - bin/
      - lib/
      - usr/
  wrapper:
    source: snap/local
    plugin: dump
    override-build: |
      # The plugs needed to run Wayland. (wayland-launch checks them, setup.sh connects them)
      # You may add further plugs here if you want these options
      PLUGS="opengl wayland graphics-core22"
      sed --in-place "s/%PLUGS%/$PLUGS/g" $SNAPCRAFT_PART_BUILD/wayland-launch
      sed --in-place "s/%PLUGS%/$PLUGS/g" $SNAPCRAFT_PART_BUILD/setup.sh
      sed --in-place "s/%SNAP%/$SNAPCRAFT_PROJECT_NAME/g" $SNAPCRAFT_PART_BUILD/wayland-launch
      sed --in-place "s/%SNAP%/$SNAPCRAFT_PROJECT_NAME/g" $SNAPCRAFT_PART_BUILD/setup.sh
      snapcraftctl build
    stage-packages:
      - inotify-tools
    organize:
      yquake2-launch: bin/yquake2-launch
      wayland-launch: bin/wayland-launch
      setup.sh: bin/setup.sh
    after: [ quake2 ]
  graphics-core22:
    after: [ wrapper ]
    source: https://github.com/MirServer/graphics-core22.git
    plugin: dump
    override-prime: |
      craftctl default
      ${CRAFT_PART_SRC}/bin/graphics-core22-cleanup mesa-core22 nvidia-core22
    prime:
    - bin/graphics-core22-wrapper
